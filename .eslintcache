[{"E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\index.js":"1","E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\reportWebVitals.js":"2","E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\App.js":"3","E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\Routing\\BaseRouting.js":"4","E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\Components\\header.js":"5","E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\Components\\HeadTail.js":"6","E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\Components\\About.js":"7","E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\Components\\home.js":"8"},{"size":543,"mtime":1610464482000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":115,"mtime":1662028670362,"results":"12","hashOfConfig":"10"},{"size":615,"mtime":1662028645550,"results":"13","hashOfConfig":"10"},{"size":938,"mtime":1662029106493,"results":"14","hashOfConfig":"10"},{"size":3131,"mtime":1662366613023,"results":"15","hashOfConfig":"10"},{"size":3705,"mtime":1662028837176,"results":"16","hashOfConfig":"10"},{"size":2898,"mtime":1662030755184,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"35gkpc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\index.js",[],["36","37"],"E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\reportWebVitals.js",[],"E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\App.js",[],"E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\Routing\\BaseRouting.js",[],"E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\Components\\header.js",[],"E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\Components\\HeadTail.js",["38","39","40","41"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nconst HeadTail = () => {\r\n  const [selectedValue, setSelectedValue] = useState(null);\r\n  const [errormsg, setErrormsg] = useState(\"\");\r\n  const [prevVal, setPrevVal] = useState(\"\");\r\n  const [list, setList] = useState({});\r\n  const [count, setCount] = useState(0);\r\n\r\n  const dropdownData = [\r\n    { value: \"H\", label: \"H\" },\r\n    { value: \"T\", label: \"T\" },\r\n  ];\r\n\r\n  const inputHandler = (selected) => {\r\n    setSelectedValue(selected);\r\n    setErrormsg(\"\");\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    const oldData = { ...list };\r\n    let val = count;\r\n    let found = false;\r\n    if (selectedValue) {\r\n      if (selectedValue.value === prevVal || prevVal === \"\") {\r\n        oldData[count] = \"\";\r\n        oldData[count] = oldData.count\r\n          ? oldData.count\r\n          : \"\" + selectedValue.value;\r\n        val += 1;\r\n      } else {\r\n        Object.keys(oldData).map((el) => {\r\n          if (oldData[el] !== selectedValue.value && found === false) {\r\n            found = true;\r\n            return (oldData[el] = oldData[el] + \" \" + selectedValue.value);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      setErrormsg(\"Please select a value\");\r\n    }\r\n    setPrevVal(selectedValue ? selectedValue.value : \"\");\r\n    setList(oldData);\r\n    setSelectedValue(null);\r\n    setCount(val);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <h2 className=\"text-center\">Welcome to Head-Tail</h2>\r\n        </div>\r\n\r\n        <div className=\"btnstylecss text-center mt-3 \">\r\n          <div className=\"row\">\r\n            <div className=\"col-1\"></div>\r\n            <div className=\"col-5\">\r\n              <div className=\"form-group\">\r\n                <Select\r\n                  options={dropdownData}\r\n                  onChange={inputHandler}\r\n                  value={selectedValue}\r\n                />\r\n                {errormsg != \"\" && (\r\n                  <p style={{ color: \"red\", textAlign: \"left\" }}>{errormsg}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <button className=\"btnCss\" onClick={submitHandler}>\r\n                SUBMIT\r\n              </button>\r\n            </div>\r\n            <div className=\"col-1\"></div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              {Object.keys(list).map((el) => {\r\n                return <p>{list[el]}</p>;\r\n              })}\r\n              {/* {item.map((elem) => {\r\n                return (\r\n                  <h2 className={elem.cont == \"0th\" ? \"d_none\" : \"\"}>\r\n                    {elem.cont} added {elem.val}\r\n                  </h2>\r\n                );\r\n              })} */}\r\n              {/* <h2 className={count.cont==0?'d_none':''}>{count.cont} added {count.val}</h2> */}\r\n              {/* <h2 className={t==0?'d_none':''}>{t} added T</h2> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeadTail;\r\n","E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\Components\\About.js",[],"E:\\assigenment_practical_task\\practical_task\\practical_task\\src\\Components\\home.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":1,"column":38,"nodeType":"48","messageId":"49","endLine":1,"endColumn":44},{"ruleId":"51","severity":1,"message":"52","line":33,"column":39,"nodeType":"53","messageId":"54","endLine":33,"endColumn":41},{"ruleId":"55","severity":1,"message":"56","line":66,"column":27,"nodeType":"57","messageId":"58","endLine":66,"endColumn":29},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]